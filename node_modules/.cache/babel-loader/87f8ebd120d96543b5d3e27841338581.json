{"ast":null,"code":"import { mockData } from './mock-data';\nimport NProgress from 'nprogress';\nimport axios from 'axios';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nexport const extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst checkToken = async accessToken => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`).then(res => res.json()).catch(error => error.json());\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n\n    NProgress.done();\n    return result.data.events;\n  }\n};\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n\n    if (!code) {\n      const results = await axios.get(\"https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\");\n      const {\n        authUrl\n      } = results.data;\n      return window.location.href = authUrl;\n    }\n\n    return code && getToken(code);\n  }\n\n  return accessToken;\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async code => {\n  const encodeCode = encodeURIComponent(code);\n  const {\n    access_token\n  } = await fetch('https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode).then(res => {\n    return res.json();\n  }).catch(error => error);\n  access_token && localStorage.setItem(\"access_token\", access_token);\n  return access_token;\n};","map":{"version":3,"names":["mockData","NProgress","axios","extractLocations","events","map","event","location","locations","Set","checkToken","accessToken","result","fetch","then","res","json","catch","error","getEvents","start","window","href","startsWith","done","token","getAccessToken","removeQuery","url","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token"],"sources":["/Users/prashantpriya/Desktop/CF Projects/meet-final/src/api.js"],"sourcesContent":["import { mockData } from './mock-data';\nimport NProgress from 'nprogress';\nimport axios from 'axios';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}