{"ast":null,"code":"import { mockData } from './mock-data';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nexport const extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\nexport const getEvents = async () => {\n  return mockData;\n};","map":{"version":3,"names":["mockData","extractLocations","events","map","event","location","locations","Set","getEvents"],"sources":["/Users/prashantpriya/Desktop/CF Projects/meet-final/src/api.js"],"sourcesContent":["import { mockData } from './mock-data';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\nexport const getEvents = async () => {\n    return mockData;\n};\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,MAAD,IAAY;EACxC,IAAID,gBAAgB,GAAGC,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,QAA5B,CAAvB;EACA,IAAIC,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQN,gBAAR,CAAJ,CAAhB;EACA,OAAOK,SAAP;AACH,CAJM;AAKP,OAAO,MAAME,SAAS,GAAG,YAAY;EACjC,OAAOR,QAAP;AACH,CAFM"},"metadata":{},"sourceType":"module"}