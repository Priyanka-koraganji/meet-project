[{"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/service-worker.js":"1","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/index.js":"2","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/serviceWorkerRegistration.js":"3","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/reportWebVitals.js":"4","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/App.js":"5","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/EventList.js":"6","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/CitySearch.js":"7","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/NumberOfEvents.js":"8","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/api.js":"9","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/Event.js":"10","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/mock-data.js":"11","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/Alert.js":"12","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/WelcomeScreen.jsx":"13"},{"size":2836,"mtime":1658890658818,"results":"14","hashOfConfig":"15"},{"size":999,"mtime":1658886787436,"results":"16","hashOfConfig":"15"},{"size":5051,"mtime":1658890669775,"results":"17","hashOfConfig":"15"},{"size":364,"mtime":1658280865538,"results":"18","hashOfConfig":"15"},{"size":2483,"mtime":1659054824999,"results":"19","hashOfConfig":"15"},{"size":436,"mtime":1658886787435,"results":"20","hashOfConfig":"15"},{"size":2369,"mtime":1658886787435,"results":"21","hashOfConfig":"15"},{"size":1580,"mtime":1659054738165,"results":"22","hashOfConfig":"15"},{"size":3600,"mtime":1658980009165,"results":"23","hashOfConfig":"15"},{"size":1434,"mtime":1658604878320,"results":"24","hashOfConfig":"15"},{"size":3519,"mtime":1658886787437,"results":"25","hashOfConfig":"15"},{"size":1061,"mtime":1658977169566,"results":"26","hashOfConfig":"15"},{"size":1523,"mtime":1658979939810,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"o8vdwa",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/service-worker.js",[],["70","71","72","73"],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/index.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/serviceWorkerRegistration.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/reportWebVitals.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/App.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/EventList.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/CitySearch.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/NumberOfEvents.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/api.js",["74","75"],[],"import { mockData } from './mock-data';\nimport NProgress from 'nprogress';\nimport axios from 'axios';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\nexport const checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n    if (!navigator.onLine) {\n        const data = localStorage.getItem(\"lastEvents\");\n        NProgress.done();\n        return data ? JSON.parse(data).events : [];;\n    }\n    const token = await getAccessToken();\n    if (token) {\n        removeQuery();\n        const url = 'https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    try {\n        const encodeCode = encodeURIComponent(code);\n\n        const response = await fetch('https://y0dua2imue.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`)\n        }\n        const { access_token } = await response.json();\n        access_token && localStorage.setItem(\"access_token\", access_token);\n        return access_token;\n    } catch (error) {\n        error.json();\n    }\n}","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/Event.js",["76","77"],[],"import React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nclass Event extends Component {\n    constructor() {\n        super()\n        this.state = {\n            Details: false\n        }\n    }\n    detailsButton = (prevState) => {\n        this.setState({\n            Details: !prevState.Details\n        })\n    }\n\n    render() {\n        const { event } = this.props;\n        const { Details } = this.state;\n        return (\n            <div className='event'>\n                <div>\n\n                    <h2 className=\"summary\">{event.summary}</h2>\n                    <p className=\"time\">{event.created}</p>\n                    <p className=\"location\">{event.location}</p>\n                    {\n                        Details ?\n                            '' : <button variant=\"warning\" className=\"show-details\" onClick={() => this.detailsButton(this.state)}>Show Details</button>\n                    }\n                </div>\n                {\n                    Details ?\n                        <div className='more-details'>\n                            <h2>About Event</h2>\n                            <p>{event.description}</p>\n                            <button variant=\"outline-warning\" className=\"hide-details\" onClick={() => this.detailsButton(this.state)}>Hide Details</button>\n                        </div> : ''\n                }\n\n            </div>\n        )\n\n    }\n}\nexport default Event;","/Users/prashantpriya/Desktop/CF Projects/meet-final/src/mock-data.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/Alert.js",[],[],"/Users/prashantpriya/Desktop/CF Projects/meet-final/src/WelcomeScreen.jsx",[],[],{"ruleId":"78","severity":2,"message":"79","line":22,"column":18,"nodeType":"80","messageId":"81","endLine":22,"endColumn":22,"suppressions":"82"},{"ruleId":"78","severity":2,"message":"79","line":53,"column":31,"nodeType":"80","messageId":"81","endLine":53,"endColumn":35,"suppressions":"83"},{"ruleId":"78","severity":2,"message":"79","line":66,"column":1,"nodeType":"80","messageId":"81","endLine":66,"endColumn":5,"suppressions":"84"},{"ruleId":"78","severity":2,"message":"79","line":68,"column":5,"nodeType":"80","messageId":"81","endLine":68,"endColumn":9,"suppressions":"85"},{"ruleId":"86","severity":1,"message":"87","line":41,"column":100,"nodeType":"88","messageId":"89","endLine":41,"endColumn":101},{"ruleId":"86","severity":1,"message":"87","line":92,"column":112,"nodeType":"88","messageId":"89","endLine":92,"endColumn":113},{"ruleId":"90","severity":1,"message":"91","line":2,"column":10,"nodeType":"80","messageId":"92","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"93","line":2,"column":18,"nodeType":"80","messageId":"92","endLine":2,"endColumn":22},"no-restricted-globals","Unexpected use of 'self'.","Identifier","defaultMessage",["94"],["95"],["96"],["97"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Button' is defined but never used.","unusedVar","'Card' is defined but never used.",{"kind":"98","justification":"99"},{"kind":"98","justification":"99"},{"kind":"98","justification":"99"},{"kind":"98","justification":"99"},"directive",""]